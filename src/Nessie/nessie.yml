services:
  nessie:
    image: ghcr.io/projectnessie/nessie:0.104.1
    container_name: nessie_server
    ports:
      - "19120:19120"
    env_file:
      - .env
    environment:
      - NESSIE_VERSION_STORE_TYPE=JDBC
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://nessie-postgres:5432/nessie_db
      - QUARKUS_DATASOURCE_USERNAME=${POSTGRES_NESSIE_USER}
      - QUARKUS_DATASOURCE_PASSWORD=${POSTGRES_NESSIE_PASSWORD}
      - QUARKUS_DATASOURCE_DB_KIND=postgresql
      - QUARKUS_HTTP_AUTH_BASIC=false
      - NESSIE_AUTHENTICATION_ENABLED=false
    depends_on:
      nessie-postgres:
        condition: service_healthy
    networks:
      - lakehouse_internal_net
    

  nessie-postgres:
    image: postgres:15
    container_name: nessie_postgres_db
    ports:
      - "54321:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_NESSIE_USER}
      - POSTGRES_PASSWORD=${POSTGRES_NESSIE_PASSWORD}
      - POSTGRES_DB=nessie_db
    volumes:
      - nessie-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_NESSIE_USER -d nessie_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lakehouse_internal_net

  nessie-cli:
    image: ghcr.io/projectnessie/nessie-cli:0.104.1
    container_name: nessie_cli
    depends_on:
      nessie:
        condition: service_started 
    networks:
      - lakehouse_internal_net
    volumes:
      - ./Nessie/nessie.sh:/home/nessie/nessie.sh
    entrypoint: /bin/sh
    tty: true
    stdin_open: true

volumes:
  nessie-postgres-data:


